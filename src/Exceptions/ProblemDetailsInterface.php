<?php

declare(strict_types=1);

namespace IfCastle\Protocol\Exceptions;

/**
 * The Problem Details Object is a way to carry machine-readable details of errors in a HTTP response
 * to avoid the need to define new error response formats for HTTP APIs.
 *
 * @see https://datatracker.ietf.org/doc/html/rfc7807
 * @see https://www.rfc-editor.org/rfc/rfc9457.html
 * @see https://www.baeldung.com/rest-api-error-handling-best-practices
 */
interface ProblemDetailsInterface
{
    public const string TYPE = 'type';
    public const string TITLE = 'title';
    public const string STATUS = 'status';
    public const string DETAIL = 'detail';
    public const string INSTANCE = 'instance';
    public const string ERRORS = 'errors';
    
    /**
     * A URI reference [RFC3986] that identifies the
     * problem type.  This specification encourages that, when
     * dereferenced, it provide human-readable documentation for the
     * problem type (e.g., using HTML [W3C.REC-html5-20141028]).  When
     * this member is not present, its value is assumed to be
     * "about:blank".
     */
    public function getType(): string;

    /**
     * A short, human-readable summary of the problem
     * type.  It SHOULD NOT change from occurrence to occurrence of the
     * problem, except for purposes of localization (e.g., using
     * proactive content negotiation; see [RFC7231], Section 3.4).
     *
     */
    public function getTitle(): string;

    /**
     * The HTTP status code ([RFC7231], Section 6)
     * generated by the origin server for this occurrence of the problem.
     *
     */
    public function getStatus(): int;

    /**
     * A human-readable explanation specific to this
     * occurrence of the problem.
     *
     */
    public function getDetail(): ?string;

    /**
     * A URI reference that identifies the specific
     * occurrence of the problem.  It may or may not yield further
     * information if dereferenced.
     *
     */
    public function getInstance(): ?string;
    
    /**
     * Additional members that are not part of the Problem Details Object
     * (extension members).
     *
     * Structure
     * {
     * "pointer": "/data/attributes/username",
     * "detail": "Username must be at least 3 characters long."
     * }
     *
     * @return array<string, array{pointer: string, detail: string}>
     */
    public function getErrors(): array;

    /**
     * Additional members that are not part of the Problem Details Object
     * specification.
     *
     * @return array<string, mixed>
     */
    public function getAdditionalData(): array;
}
